<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
							http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
							http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
							http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- 加载数据库相关的配置文件 -->
	<context:property-placeholder
		location="classpath:db.properties" />

	<!-- 配置数据源 -->
	<bean id="dataSource"
		class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close">
		<property name="driverClassName" value="${db.driverName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<!-- 配置SqlSessionFactory -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--数据源 -->
		<property name="dataSource" ref="dataSource" />

		<!--加载mybatis全局配置文件 -->
		<property name="configLocation"
			value="classpath:mybatis/mybatis-config.xml" />

		<!--mapper.xml所在位置 -->
		<property name="mapperLocations"
			value="classpath*:mybatis/mappings/*Mapper.xml" />

		<!--指定需要使用别名的实体类所在的包 -->
		<property name="typeAliasesPackage" value="com.beans" />
		
		<property name="plugins">
		    <set>
		        <!--配置pageHelper 分页插件-->
		        <bean class="com.github.pagehelper.PageInterceptor">
		            <property name="properties">
		                <props>
		                    <!--方言：-->
		                    <prop key="helperDialect">mysql</prop>
		                </props>
		            </property>
		        </bean>
		    </set>
		</property>
	</bean>

	<!-- 配置mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--如果需要扫描多个包，中间使用半角逗号隔开 -->
		<property name="basePackage" value="com.mappers"></property>
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory" />
	</bean>

	<!-- 配置事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源,就是上面配置的druid数据源- -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 业务层所有的方法都要进行事务管理 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* com.service.impl.*.*(..))" />
	</aop:config>

	<!-- 配置具体的事务管理情况 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS"
				read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS"
				read-only="true" />
		</tx:attributes>
	</tx:advice>

</beans>
					